This project is an example of how to integrate UNITY testing into a C project.

PROJECT STRUCTURE:

├── Makefile
├── README
├── report.py
├── src
│   ├── bank.c
│   ├── interest.c
│   ├── interest.h
│   ├── money.c
│   └── money.h
├── test
│   ├── TestInterest.c
│   └── TestMoney.c
└── unity
    └── src
        ├── unity.c
        ├── unity.h
        ├── unity.h.gch
        └── unity_internals.h

DEPENDENCIES:
Test results are performed by "results.py". This file is run after "make test" due to test file dependency on source code.

The UNITY C test engine is located in ./unity/src and can be updated at https://github.com/ThrowTheSwitch/Unity

HOW-TO:
To add a new test file, copy an example such as TestInterest.c and rename it to match your source file. For example, if you create a new source file called './src/account.c', create the corresponding test file:
#> cp ./test/TestInterest.c ./test/TestAccount.c

Modify the './test/TestAccount.c' file so it includes the corresponding header file, 'account.h'. Add test methods as normal. 'makefile' will automatically detect your new source file and test file to generate a test report.

USAGE:
The Makefile will compiles the main program and automatically generates test files and provides a report.

#> make
-- Builds the main binary

#> make test
-- Builds test files and prints output

#> make clean
-- Removes all build files and test executables

'report.py' is not intended to be run by the user.
